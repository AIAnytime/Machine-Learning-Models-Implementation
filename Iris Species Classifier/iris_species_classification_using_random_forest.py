# -*- coding: utf-8 -*-
"""Iris Species Classification using Random Forest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Yoz5ooaxGnvIeGBfIWoOp59Cy6gFckpZ
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import ConfusionMatrixDisplay, confusion_matrix, classification_report, plot_confusion_matrix

import pickle

data = pd.read_csv("Iris.csv")

data

data.info()

data.isna().sum()

data['Species'].value_counts()

def preprocess_inputs(df):
  df = df.copy()
  #drop ID
  df = df.drop("Id", axis=1)
  #X and y
  X = df.drop('Species', axis=1)
  y = df['Species']
  #Split the data
  X_train, X_test, y_train, y_test = train_test_split(X,y, train_size=0.8, shuffle=True, random_state=21)
  return X_train, X_test, y_train, y_test

X_train, X_test, y_train, y_test  = preprocess_inputs(data)

print(len(X_train))
print(len(y_train))
print(len(X_test))
print(len(y_test))

X_train

"""#Model Training"""

classifier = RandomForestClassifier()

model = classifier.fit(X_train, y_train)

"""# Evaluation"""

accuracy = model.score(X_test, y_test)
print("The accuracy is: ",accuracy*100, "%")

y_pred = model.predict(X_test)

y_pred

clf = classification_report(y_test, y_pred)
print(clf)

cm = plot_confusion_matrix(model, X_test, y_test, labels=model.classes_)

"""#Feature Impact using SHAP Values"""

!pip install shap

import shap

explainer = shap.TreeExplainer(model)
shap_values = explainer.shap_values(X_test)
shap.summary_plot(shap_values, X_test, class_names=model.classes_)

pickle.dump(model, open('model.pkl', 'wb'))


# -*- coding: utf-8 -*-
"""Electrical Grid Stability Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C2tN4_wJ-pzjB3htxvG9j5oKaRSg_ai0
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns

data = pd.read_csv("drive/My Drive/colab notebooks/Data_for_UCI_named.csv")

data

data.info()

plt.figure(figsize= (10,12))
data['stabf'].value_counts().plot(kind = 'pie')
plt.show()

data.corr()

data.describe()

from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split

from sklearn.linear_model import LogisticRegression

from sklearn.metrics import matthews_corrcoef, plot_confusion_matrix, classification_report

"""# using sklearn's individual algorithm"""

def preprocess_inputs(df):
  df = df.copy()

  #X and y
  X = df.drop("stabf", axis=1)
  y = df['stabf']

  #split
  X_train, X_test, y_train, y_test = train_test_split(X,y, train_size=0.7, shuffle=True, random_state=1)

  #scale
  scaler = StandardScaler()
  X_train = pd.DataFrame(scaler.fit_transform(X_train), index = X_train.index, columns = X_train.columns)

  return X_train, X_test, y_train, y_test

X_train, X_test, y_train, y_test = preprocess_inputs(data)

log_reg = LogisticRegression()
estimator_reg = log_reg.fit(X_train, y_train)

y_pred = estimator_reg.predict(X_test)
y_pred

plot_confusion_matrix(estimator_reg, X_test, y_test, labels = estimator_reg.classes_)

clr_log_reg = classification_report(y_test, y_pred, labels = estimator_reg.classes_)
print(clr_log_reg)


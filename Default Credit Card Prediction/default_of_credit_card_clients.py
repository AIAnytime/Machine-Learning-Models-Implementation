# -*- coding: utf-8 -*-
"""default of credit card clients.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1klGR1qRIKqJ1kEDBSo1dBkMGCQnNMCOW
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline

"""# Data

Link: https://archive.ics.uci.edu/ml/datasets/default+of+credit+card+clients
"""

data = pd.read_excel("drive/My Drive/colab notebooks/default of credit card clients.xls")

data

new_header = data.iloc[0] #grab the first row for the header
data = data[1:] #take the data less the header row
data.columns = new_header #set the header row as the df header

data

data.columns = map(str.lower, data.columns)

data

data['id'].unique()

data['education'].unique()

data['sex'].unique()

data['sex'].value_counts()

data['default payment next month'].value_counts()

data.dtypes

data.info()

data['pay_0'].unique()

"""# Data Preparation"""

def preprocess_inputs(df):
  df = df.copy()

  #drop id
  df = df.drop("id", axis=1)

  #converting object column to int columns (continuous variables)
  df['limit_bal'] = df['limit_bal'].astype(str).astype(int)
  df['age'] = df['age'].astype(str).astype(int)
  df['bill_amt1'] = df['bill_amt1'].astype(str).astype(int)
  df['bill_amt2'] = df['bill_amt2'].astype(str).astype(int)
  df['bill_amt3'] = df['bill_amt3'].astype(str).astype(int)
  df['bill_amt4'] = df['bill_amt4'].astype(str).astype(int)
  df['bill_amt5'] = df['bill_amt5'].astype(str).astype(int)
  df['bill_amt6'] = df['bill_amt6'].astype(str).astype(int)
  df['pay_amt1'] = df['pay_amt1'].astype(str).astype(int)
  df['pay_amt2'] = df['pay_amt2'].astype(str).astype(int)
  df['pay_amt3'] = df['pay_amt3'].astype(str).astype(int)
  df['pay_amt4'] = df['pay_amt4'].astype(str).astype(int)
  df['pay_amt5'] = df['pay_amt5'].astype(str).astype(int)
  df['pay_amt6'] = df['pay_amt6'].astype(str).astype(int)

  #rename the last column
  df.rename(columns={'default payment next month': 'label'}, inplace = True)



  return df

X = preprocess_inputs(data)

X

X.dtypes

"""# Using PyCaret"""

!pip install pycaret

import pycaret.classification as pyc

pyc.setup(
    data = X,
    target = 'label',
    train_size = 0.7,
    normalize = True
)

pyc.compare_models()

best_model = pyc.create_model('lr')

pyc.evaluate_model(best_model)

unseen_data = X.iloc[[1,2,3], :-1]

unseen_data

pyc.predict_model(best_model, data = unseen_data)